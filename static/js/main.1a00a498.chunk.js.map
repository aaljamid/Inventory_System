{"version":3,"sources":["stock.png","Components/InvListContainer.js","Components/Inventory.js","Components/Card.js","Components/Home.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InventoryTable","React","useState","columns","title","field","type","data","itemName","category","quantity","location","state","setState","options","exportButton","selection","grouping","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","allRowsDelete","Button","onClick","console","log","variant","color","startIcon","Inventory","Component","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","classes","Card","className","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","CardActions","size","Home","props","src","imgurl","axios","get","then","res","urls","regular","divStyle","backgroundImage","this","style","m","NavBar","time","datetime","timeHr","Date","class","href","Logo","width","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","moment","format","path","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a00a498.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stock.47bb1941.png\";","import React from \"react\";\r\n// use material-table for table component\r\nimport MaterialTable from \"material-table\";\r\n// import Alert from \"@material-ui/core/Button\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport default function InventoryTable() {\r\n  // const removeFunction = () => {\r\n  //   this.setState({ data: [] });\r\n  // };\r\n\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      // putting dummy data for demonstration\r\n      { title: \"Item itemName\", field: \"itemName\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      { title: \"Quantity\", field: \"quantity\", type: \"numeric\" },\r\n      { title: \"Location\", field: \"location\" }\r\n    ],\r\n\r\n    // putting dummy data for demonstration purpose\r\n    data: [\r\n      {\r\n        itemName: \"Bread\",\r\n        category: \"Food\",\r\n        quantity: 15,\r\n        location: \"ABC Warehouse\"\r\n      },\r\n      {\r\n        itemName: \"Cookies\",\r\n        category: \"Food\",\r\n        quantity: 15,\r\n        location: \"ABC Warehouse\"\r\n      },\r\n      {\r\n        itemName: \"Water\",\r\n        category: \"Drink\",\r\n        quantity: 20,\r\n        location: \"XYZ Warehouse\"\r\n      },\r\n      {\r\n        itemName: \"Juice\",\r\n        category: \"Drink\",\r\n        quantity: 20,\r\n        location: \"XYZ Warehouse\"\r\n      }\r\n    ]\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* the start of the table  */}\r\n      {/* <Alert severity=\"success\">This is a success alert â€” check it out!</Alert> */}\r\n      <MaterialTable\r\n        // utilize export,slection, and grouping functions   from material-table library\r\n        options={{\r\n          exportButton: true,\r\n          selection: true,\r\n          grouping: true\r\n        }}\r\n        title=\"Inventory\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 500);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setState(prevState => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 600);\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            }),\r\n          allRowsDelete: oldData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState(prevState => {\r\n                  const data = [];\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            })\r\n        }}\r\n      />\r\n      <Button\r\n        onClick={() => {\r\n          console.log(\"remove\");\r\n          setState({\r\n            data: []\r\n          });\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        Delete all\r\n      </Button>\r\n      {console.log(state.data)}\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React from \"react\";\r\n// import ListItem from \"./ListItem\";\r\n// import ListTable from \"./ListTable\";\r\n\r\n// export default class InvListContainer extends React.Component {\r\n//   render() {\r\n//     const allItems = this.props.toAddItems.map(function(task, index) {\r\n//       return (\r\n//         <div>\r\n//           <ListItem invItem={task} key={index} />\r\n//           {/* <ListTable invItem={task} key={index} />; */}\r\n//         </div>\r\n//       );\r\n//     });\r\n//     return (\r\n//       <div>\r\n//         <ul>{allItems} </ul> <ListTable />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React, { Component } from \"react\";\r\n\r\n// import the InvListContainer\r\nimport InvListContainer from \"./InvListContainer\";\r\n\r\nexport class Inventory extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <InvListContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n\r\n// #####################################  excluded #######################\r\n\r\n// import React from \"react\";\r\n// import InvListContainer from \"./InvListContainer\";\r\n\r\n// export default class Inventory extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       toAddItems: [\"just a test\", \"Test the function \", \"test 3\"],\r\n//       newItem: \"\"\r\n//     };\r\n//   }\r\n\r\n//   addItem = e => {\r\n//     e.preventDefault();\r\n//     console.log(\"Add Item!\");\r\n//     this.setState({\r\n//       toAddItems: [...this.state.toAddItems, this.state.newItem],\r\n//       newItem: \"\"\r\n//     });\r\n//   };\r\n\r\n//   removeAllItem = e => {\r\n//     e.preventDefault();\r\n//     console.log(\"RemoveAll Item!\");\r\n//     this.setState({\r\n//       toAddItems: [],\r\n//       newItem: \"\"\r\n//     });\r\n//   };\r\n\r\n//   onTextBoxChange = e => {\r\n//     console.log(\"On Text Change\", e.target.value);\r\n//     this.setState({\r\n//       newItem: e.target.value\r\n//     });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       //  main div for the image, it gets the information\r\n//       //  from the parent props\r\n\r\n//       <div class=\"container\">\r\n//         <form>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter New Item!\"\r\n//             value={this.state.newItem}\r\n//             onChange={this.onTextBoxChange}\r\n//           />\r\n\r\n//           <button type=\"button\" class=\"btn btn-dark m-2\" onClick={this.addItem}>\r\n//             Add Item!\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             class=\"btn btn-dark m-2\"\r\n//             onClick={this.removeAllItem}\r\n//           >\r\n//             Remove All\r\n//           </button>\r\n//         </form>\r\n//         <hr />\r\n//         <InvListContainer toAddItems={this.state.toAddItems} />\r\n\r\n//         {/* <div class=\"container\">\r\n//           <div class=\"row align-items-center\">\r\n//             <div class=\"col\">\r\n//               <table class=\"table\">\r\n//                 <thead class=\"thead-light\">\r\n//                   <tr>\r\n//                     <th scope=\"col\">#</th>\r\n//                     <th scope=\"col\">First</th>\r\n//                     <th scope=\"col\">Last</th>\r\n//                     <th scope=\"col\">Handle</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   <tr>\r\n//                     <th scope=\"row\">1</th>\r\n//                     <td>Mark</td>\r\n//                     <td>Otto</td>\r\n//                     <td>@mdo</td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <th scope=\"row\">2</th>\r\n//                     <td>Jacob</td>\r\n//                     <td>Thornton</td>\r\n//                     <td>@fat</td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <th scope=\"row\">3</th>\r\n//                     <td>Larry</td>\r\n//                     <td>the Bird</td>\r\n//                     <td>@twitter</td>\r\n//                   </tr>\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </div>\r\n//         </div> */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// import React from \"react\";\r\n// import MaterialTable from \"material-table\";\r\n\r\n// export default function MaterialTableDeo() {\r\n//   const [state, setState] = React.useState({\r\n//     columns: [\r\n//       { title: \"Item itemName\", field: \"itemName\" },\r\n//       { title: \"Category\", field: \"category\" },\r\n//       { title: \"Quantity\", field: \"quantity\", type: \"numeric\" },\r\n//       {\r\n//         title: \"Location\",\r\n//         field: \"location\"\r\n//         // lookup: { 34: \"ABC Warehouse\", 63: \"XYZ Warehouse\" }\r\n//       }\r\n//     ],\r\n//     data: [\r\n//       {\r\n//         itemName: \"Bread\",\r\n//         category: \"Food\",\r\n//         quantity: 15,\r\n//         location: \"ABC Warehouse\"\r\n//       },\r\n//       {\r\n//         itemName: \"Water\",\r\n//         category: \"Drink\",\r\n//         quantity: 20,\r\n//         location: \"XYZ Warehouse\"\r\n//       }\r\n//     ]\r\n//   });\r\n\r\n//   return (\r\n//     <MaterialTable\r\n//       title=\"Inventory\"\r\n//       columns={state.columns}\r\n//       data={state.data}\r\n//       editable={{\r\n//         onRowAdd: newData =>\r\n//           new Promise(resolve => {\r\n//             setTimeout(() => {\r\n//               resolve();\r\n//               setState(prevState => {\r\n//                 const data = [...prevState.data];\r\n//                 data.push(newData);\r\n//                 return { ...prevState, data };\r\n//               });\r\n//             }, 500);\r\n//           }),\r\n//         onRowUpdate: (newData, oldData) =>\r\n//           new Promise(resolve => {\r\n//             setTimeout(() => {\r\n//               resolve();\r\n//               if (oldData) {\r\n//                 setState(prevState => {\r\n//                   const data = [...prevState.data];\r\n//                   data[data.indexOf(oldData)] = newData;\r\n//                   return { ...prevState, data };\r\n//                 });\r\n//               }\r\n//             }, 600);\r\n//           }),\r\n//         onRowDelete: oldData =>\r\n//           new Promise(resolve => {\r\n//             setTimeout(() => {\r\n//               resolve();\r\n//               setState(prevState => {\r\n//                 const data = [...prevState.data];\r\n//                 data.splice(data.indexOf(oldData), 1);\r\n//                 return { ...prevState, data };\r\n//               });\r\n//             }, 600);\r\n//           }),\r\n\r\n//         allRowsDelete: oldData =>\r\n//           new Promise(resolve => {\r\n//             setTimeout(() => {\r\n//               resolve();\r\n//               setState(prevState => {\r\n//                 const data = [];\r\n//                 return { ...prevState, data };\r\n//               });\r\n//             }, 600);\r\n//           })\r\n//       }}\r\n//     />\r\n//   );\r\n// }\r\n","import React from \"react\";\r\n\r\n// import all the components form material ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// specify the card size\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  color: \"red\"\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          // using external img for the card background\r\n          image={\r\n            \"https://images.unsplash.com/photo-1518378782190-56da4f3efde6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1189&q=80\"\r\n          }\r\n          title=\"Inventory\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n            Services\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n            Keep track of your inventory.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"large\" color=\"inherit\">\r\n          INVENTORY\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport axios from \"axios\";\r\nimport Card from \"./Card\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: \"\",\r\n      imgurl: \"\"\r\n    };\r\n  }\r\n\r\n  //adding the axios request to get image data from unsplash\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://api.unsplash.com/photos/random?client_id=c9ce7ec20ba10268b6fbac6164f37ac58339814bae875199a42ba551bdc38702\";\r\n    axios.get(url).then(res => {\r\n      // const imgurl = res.data.urls.regular;\r\n      console.log(res);\r\n      // assign the image url to imgurl\r\n      this.setState({ imgurl: res.data.urls.regular });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // decleare the css value for the background image\r\n    const divStyle = {\r\n      backgroundImage: \"url(\" + this.state.imgurl + \")\"\r\n    };\r\n\r\n    return (\r\n      <div style={divStyle}>\r\n        <div className=\"cardStyle\">\r\n          <Card m=\"2rem\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n//import bootstrap library\r\nimport bootstrap from \"bootstrap\";\r\n// import the inventory and gome classess\r\nimport Inventory from \"./Inventory\";\r\nimport Home from \"./Home\";\r\n// import the page icon\r\nimport Logo from \"../stock.png\";\r\n// import the router\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n// import the moment-js to display the time\r\nimport moment from \"moment\";\r\n\r\n// import the axios for API request\r\nimport axios from \"axios\";\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://worldtimeapi.org/api/ip\").then(res => {\r\n      console.log(res.data.datetime);\r\n      const timeHr = new Date();\r\n      console.log(timeHr);\r\n      this.setState({ time: res.data.datetime });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {/* start of bootstrap navbar  */}\r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n              <img src={Logo} width=\"50px\"></img>\r\n            </a>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarText\"\r\n              aria-controls=\"navbarText\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n              <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item active\">\r\n                  <Link to=\"/\">\r\n                    <a class=\"nav-link\">\r\n                      Home\r\n                      <span class=\"sr-only\">(current)</span>\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <Link to=\"/inventory\">\r\n                    <a class=\"nav-link\">Inventory</a>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <span class=\"navbar-text\">\r\n                {moment().format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n              </span>\r\n            </div>\r\n          </nav>\r\n          {/* start of bootstrap navbar  */}\r\n        </div>\r\n\r\n        <div>\r\n          {/* the pages router  */}\r\n          <Switch>\r\n            <Route path=\"/inventory\">\r\n              <Inventory />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <HashRouter>\r\n        <NavBar />\r\n      </HashRouter>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}